= YaST REST Service Documentation

  Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or (at your option) version 1.3; with the Invariant Section being this copyright notice and license. A copy of the license version 1.2 is included in the section entitled "GNU Free Documentation License". 

== Roles

  Only authenticated users are allowed to access the API. Authentication is done
  by sending a Basic HTTP Authorization header.

== Table of Contents

Contents

== Overview

  This module provides management of user roles through assignment of permissions to them.


== PolicyKit Access Rights

  The following PolicyKit permissions are defined:

  org.opensuse.yast.modules.logfile

  org.opensuse.yast.modules.yapi.activedirectory

  org.opensuse.yast.modules.yapi.administrator

  org.opensuse.yast.modules.yapi.firewall

  org.opensuse.yast.modules.yapi.kerberos

  org.opensuse.yast.modules.yapi.language

  org.opensuse.yast.modules.yapi.ldap

  org.opensuse.yast.modules.yapi.licenses

  org.opensuse.yast.modules.yapi.mailsettings

  org.opensuse.yast.modules.yapi.metrics

  org.opensuse.yast.modules.yapi.mirrorcredentials

  org.opensuse.yast.modules.yapi.network

  org.opensuse.yast.modules.yapi.ntp

  org.opensuse.yast.modules.yapi.packages

  org.opensuse.yast.modules.yapi.patches

  org.opensuse.yast.modules.yapi.register

  org.opensuse.yast.modules.yapi.repositories

  org.opensuse.yast.modules.yapi.roles

  org.opensuse.yast.modules.yapi.services

  org.opensuse.yast.modules.yapi.system

  org.opensuse.yast.modules.yapi.time

  org.opensuse.yast.modules.yapi.users

  org.opensuse.yast.modules.ysr

  org.opensuse.yast.permissions


GET /roles

  Get the list of interfaces.

  CURL example:

  curl -u <user>:<password> -H "Accept: application/xml" http://localhost:4984/roles

XmlResult: roles_get

GET /roles/<role_name>

  <role_name>: name of the role

  Get the details of a role.

  CURL example:

  curl -u <user>:<password> -H "Accept: application/xml" http://localhost:4984/roles/bamboo

XmlResult: role_get

PUT /roles/<role_name>

  <role_name>: name of the role

  Update an role specification, modify users or permissions

  CURL example:

  curl -u <user>:<password> -H "Accept: application/xml" -H "Content-Type: application/xml" --data @role_update.xml -X PUT http://localhost:4984/roles/bamboo

XmlBody:   role_update_request
XmlResult: role_update_response

POST /roles

  Create a new role with a custom name, users and permissions

  CURL example:

  curl -u <user>:<password> -X POST -H "Accept: application/xml" -H "Content-Type: application/xml" --data @role_create_request.xml http://localhost:4984/roles/bamboo

XmlBody:   role_create_request
XmlResult: role_create_response

DELETE /roles/<role_name>

  Remove existing role.

  CURL example:

  curl -u <user>:<password> -H "Accept: application/xml" -X DELETE http://localhost:4984/roles/bamboo
