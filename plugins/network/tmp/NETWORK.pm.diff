0a1,26
> #--
> ## Copyright (c) 2009 Novell, Inc.
> ##
> ## All Rights Reserved.
> ##
> ## This program is free software; you can redistribute it and/or modify it
> ## under the terms of version 2 of the GNU General Public License
> ## as published by the Free Software Foundation.
> ##
> ## This program is distributed in the hope that it will be useful,
> ## but WITHOUT ANY WARRANTY; without even the implied warranty of
> ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
> ## GNU General Public License for more details.
> ##
> ## You should have received a copy of the GNU General Public License
> ## along with this program; if not, contact Novell, Inc.
> ##
> ## To contact Novell about this file by physical or electronic mail,
> ## you may find current contact information at www.novell.com
> ##++
> ## = Network interface model
> ## Provides set and gets resources from YaPI network module.
> ## Main goal is handle YaPI specific calls and data formats. Provides cleaned
> ## and well defined data.
> 
> 
45a72
> 
47,48c74,87
<             if (LanItems->vlan_id){
<                 $configuration{'vlan_id'} = LanItems->vlan_id;
---
>             y2milestone("************* Interface type ", Dumper(LanItems->type));
>             if(LanItems->type eq "vlan") {
>                 if (LanItems->vlan_id){
>                     $configuration{'vlan_id'} = LanItems->vlan_id;
>                 }
>                 
>                 if (LanItems->vlan_etherdevice){
>                     $configuration{'vlan_etherdevice'} = LanItems->vlan_etherdevice;
>                 }
>             }
> 
> 	        if(LanItems->type eq "br" && LanItems->bridge_ports) {
> 	            y2milestone("*** BRIDGE DETECTED GET BRIDGE_PORTS ********************");
> 		        $configuration{'bridge_ports'} = LanItems->bridge_ports; 
50,51c89,102
<             if (LanItems->vlan_etherdevice){
<                 $configuration{'vlan_etherdevice'} = LanItems->vlan_etherdevice;
---
> 
> 
>             if(LanItems->type eq "bond") {
>                 if(@{LanItems->bond_slaves}) {
>                     $configuration{'bond_slaves'} = LanItems->bond_slaves;
>                 }
>                 
>                 if(@{LanItems->bond_slaves}) {
>                     $configuration{'bond_slaves'} = LanItems->bond_slaves;
>                 }
>         
>         	    if(LanItems->bond_option) {
>             		$configuration{'bond_option'} = LanItems->bond_option; 
>                 }
52a104,108
> 
> 	    if(LanItems->getCurrentItem()->{'hwinfo'}->{'type'} eq "eth") {
> 		$configuration{'vendor'} = LanItems->getCurrentItem()->{"hwinfo"}->{"name"};
> 	    }
> 
53a110
> 
56c113,119
<             $interfaces{$device}= {};
---
> 	    $interfaces{$device}= {};
> 
> 	    if(LanItems->getCurrentItem()->{'hwinfo'}->{'type'} eq "eth") {
> 		$interfaces{$device}= {'vendor' => LanItems->getCurrentItem()->{"hwinfo"}->{"name"}};
> 	    } 
> 
> 	    $interfaces{$device}
143a207
> 
144a209
> 
150,160c215,267
<         my %config=("STARTMODE" => defined $ifc->{'startmode'}? $ifc->{'startmode'}: 'auto',
<                     "BOOTPROTO" => defined $ifc->{'bootproto'}? $ifc->{'bootproto'}: 'static',
<             );
<         if (defined $ifc->{'ipaddr'}) {
<             my $prefix = "32";
<             YaST::YCP::Import ("Netmask");
<             my @ip_row = split(/\//, $ifc->{'ipaddr'});
<             $prefix = $ip_row[$#ip_row];
<             if (Netmask->Check4($prefix) && $prefix =~ /\./){
<                 y2milestone("Valid netmask: ", $prefix, " will change to prefixlen");
<                 $prefix = Netmask->ToBits($prefix);
---
> 
> 	if (defined $ifc->{'delete'} && $ifc->{'delete'} eq "true") {
> 	   y2milestone("Delete virtual interface", Dumper(\$dev));
> 
> 	   NetworkInterfaces->Delete($dev);
> 	   NetworkInterfaces->Commit();
> 	   NetworkInterfaces->Write("");
> 	   YaST::YCP::Import ("Service");
> 	   Service->Restart("network");
> 
>         } else {
> 		my %config=("STARTMODE" => defined $ifc->{'startmode'}? $ifc->{'startmode'}: 'auto',
> 		            "BOOTPROTO" => defined $ifc->{'bootproto'}? $ifc->{'bootproto'}: 'static',
> 		    );
> 		if (defined $ifc->{'ipaddr'}) {
> 		    my $prefix = "32";
> 		    YaST::YCP::Import ("Netmask");
> 		    my @ip_row = split(/\//, $ifc->{'ipaddr'});
> 		    $prefix = $ip_row[$#ip_row];
> 		    if (Netmask->Check4($prefix) && $prefix =~ /\./){
> 		        y2milestone("Valid netmask: ", $prefix, " will change to prefixlen");
> 		        $prefix = Netmask->ToBits($prefix);
> 		    }
> 		    $config{"IPADDR"} = $ip_row[0]."/".$prefix;
> 		}
> 		if (defined $ifc->{'mtu'}) {
> 		    $config{"MTU"} = $ifc->{'mtu'};
> 		}
> 		if (defined $ifc->{'vlan_id'}) {
> 		    $config{"VLAN_ID"} = $ifc->{'vlan_id'};
> 		}
> 		if (defined $ifc->{'vlan_etherdevice'}) {
> 		    $config{"ETHERDEVICE"} = $ifc->{'vlan_etherdevice'};
> 		}
> 
> 		if (defined $ifc->{'bridge'}) {
> 		    y2milestone("*** BRIDGE DETECTED ***");
> 		    y2milestone(Dumper($ifc->{'bridge_ports'}));
> 		    $config{"BRIDGE"} = "yes";
> 		    $config{"BRIDGE_PORTS"} = $ifc->{'bridge_ports'};
> 		}
> 	  
> 		if (defined $ifc->{'bond'}) {
> 		    y2milestone("*** bonding settings *******************************");
> 		    $config{"BONDING_MASTER_MASTER"} = "yes";
> 		    $config{"BONDING_MODULE_OPTS"} = $ifc->{'bond_option'};
> 		    #$config{"BONDING_SLAVE"} = $ifc->{'bond_option'};
> 
> 		    my @slaves = split(/ /,$ifc->{'bond_slaves'});	    
> 		    
> 		    for my $i (0 .. length(@slaves)) {
>                 y2milestone("BONDING_SLAVE$i", @slaves[$i]); 
>                 $config{"BONDING_SLAVE$i"} = @slaves[$i];
162,177c269,277
<             $config{"IPADDR"} = $ip_row[0]."/".$prefix;
<         }
<         if (defined $ifc->{'mtu'}) {
<             $config{"MTU"} = $ifc->{'mtu'};
<         }
<         if (defined $ifc->{'vlan_id'}) {
<             $config{"VLAN_ID"} = $ifc->{'vlan_id'};
<         }
<         if (defined $ifc->{'vlan_etherdevice'}) {
<             $config{"ETHERDEVICE"} = $ifc->{'vlan_etherdevice'};
<         }
<         NetworkInterfaces->Current(\%config);
<         NetworkInterfaces->Commit();
<         NetworkInterfaces->Write("");
<         YaST::YCP::Import ("Service");
<         Service->Restart("network");
---
> 		}
> 
> 
> 		NetworkInterfaces->Current(\%config);
> 		NetworkInterfaces->Commit();
> 		NetworkInterfaces->Write("");
> 		YaST::YCP::Import ("Service");
> 		Service->Restart("network");
> 	}
186a287
> 
216a318
> 
