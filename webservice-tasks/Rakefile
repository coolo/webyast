require 'rake'
require 'rake/rdoctask'

# load the shared rake files from the package itself
# skip 'package-local' task, it's redefined here
require 'lib/tasks/webservice_tasks'
WebserviceTasks.loadTasks(:exclude => ["package-local.rake"])


# define clean and clobber tasks
require 'rake/clean'
CLEAN.include("package/*.spec", "package/*.gem")
CLOBBER.include("*.gem", "*.gemspec")
task :clobber => :clean


def read_version
    version = `cat VERSION`
    version.chomp
end

# generate a file from .in template, replace @VERSION@ string by VERSION file content
def version_update(filein, fileout = nil)
    if filein.nil? || filein.empty?
	puts "ERROR: empty input or output filename"
	exit 1
    end

    if fileout.nil? || fileout.empty?
	filein =~ /(.*)\.in$/
	fileout = $1
    end

    version = read_version

    puts "Updating #{fileout} (#{version})..."
    `sed -e 's|@VERSION@|#{version}|' #{filein} > #{fileout}`
end

# generate .gemspec file from the template
file "yast2-webservice-tasks.gemspec" => ["yast2-webservice-tasks.gemspec.in", "VERSION"] do
    version_update("yast2-webservice-tasks.gemspec.in")
end


# generate RPM .spec file from the template
file "package/rubygem-yast2-webservice-tasks.spec" => ["rubygem-yast2-webservice-tasks.spec.in", "VERSION"] do
    version_update("rubygem-yast2-webservice-tasks.spec.in", "package/rubygem-yast2-webservice-tasks.spec")
end

# build the gem package
desc 'Build gem package, save RPM sources to package subdirectory'
task :"package-local" => [:clean,'yast2-webservice-tasks.gemspec', 'package/rubygem-yast2-webservice-tasks.spec'] do
    version = read_version
    sh 'gem build yast2-webservice-tasks.gemspec' unless uptodate?("yast2-webservice-tasks-#{version}.gem", FileList["lib/**/*"])
    cp "yast2-webservice-tasks-#{version}.gem", "package"
end

desc 'Install yast2-webservice-tasks gem package'
task :install do
    sh 'gem install yast2-webservice-tasks'
end

desc 'Run test suite'
task :test do
    puts 'no test yet'
end
# vim: ft=ruby
