==== yast2-webservice REST Interface ====
-----------------------------------------

=== General ===
---------------
Yast2-webservice provides an interface to YaST environment of the
concerning host machine. This service is running with an installed
webserver (e.g. lighthttp) and provides an API which is based on
the REST (Representational state transfer) architecture.
Please have a look to 
http://en.wikipedia.org/wiki/Representational_State_Transfer
for more information about REST.

E.g.  getting or setting the systemtime you can use

http://<name_of_the_host>/systemtime/currenttime

In order to identify if this value has to be set or has to be get
the HTTP protocol has four mothods:

GET    - Retrive a value 
PUT    - Overwrite a value
POST   - Create a new value. Anything else like starting a system service/program
DELETE - Delete a value. E.g. delete a user login

=== General Structure of the HTTP Requests ===
----------------------------------------------

Information can be get/set in 3 different formats:

http://<name_of_the_host>/systemtime
Returns the systemtime in HTML format. Calling this URL not via a 
browser the values will be retunred in XML format.

http://<name_of_the_host>/systemtime.xml
Returns the systemtime in XML format

http://<name_of_the_host>/systemtime.json
Returns the systemtime in JSON format

== GET ==
---------

Infomation can be get in a block or each entry of the block can be get
in an extra HTTP call:

http://<name_of_the_host>/systemtime.xml

returns

<systemtime>
<currenttime type="datetime">2008-09-10T17:13:37Z</currenttime>
<is_utc type="boolean">false</is_utc>
<timezone>Europe/Berlin</timezone>
</systemtime>

whereas 

http://0.0.0.0:3001/systemtime/timezone.xml

returns

<systemtime>
<currenttime type="datetime" nil="true"/>
<is_utc type="boolean" nil="true"/>
<timezone>Europe/Berlin</timezone>
</systemtime>

So only the required value has been set in the return value.

Get calls can be generated on the command line with the call:

curl -X GET http://0.0.0.0:3001/systemtime/timezone.xml

== PUT ==
---------

Put requests are taken for OVERWRITING existing values.
Multi values can be overwritten at once in a block or each entry of the block
can be set explicity in an extra HTTP call:

http://<name_of_the_host>/language with a block of data

<?xml version="1.0" encoding="UTF-8"?>
<language>
  <firstLanguage>de_DE</firstLanguage>
  <secondLanguages>en_US,zu_ZA</secondLanguages>
</language>

whereas 

http://0.0.0.0:3001/systemtime/language/secondLanguages with a single value

<?xml version="1.0" encoding="UTF-8"?>
<language>
  <secondLanguages>en_US</secondLanguages>
</language>

So only the required value has been set.

Put calls can be generated on the command line with the call:

curl -v -H "Content-Type: application/xml; charset=utf-8" -T <data-file> http://0.0.0.0:3001/systemtime/language/secondLanguages

== POST ==
----------

Post requests are used for either generating new entries/data or for something other stuff like starting a system service,...

== DELETE ==
------------



